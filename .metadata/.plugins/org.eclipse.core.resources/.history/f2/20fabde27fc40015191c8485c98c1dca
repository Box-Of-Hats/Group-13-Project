package group13Project.security;

import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import javax.crypto.Cipher;
public class Cryptography {
	private PublicKey publicKey;
	private PrivateKey privateKey;
	private int minStrength = 1024;
	
	public Cryptography() {
		try {
			
			//Create a RSA public a private key
			KeyPairGenerator key = KeyPairGenerator.getInstance("RSA");
			key.initialize(minStrength);
			
			//Assign key pair to pair
			KeyPair pair = key.genKeyPair();
			
			//Assign private key to class attribute
			this.privateKey = pair.getPrivate();
			//Assign public key to class attribute
			this.publicKey = pair.getPublic() ;
			
		} catch(NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
	}
	public Cryptography(int strength) {
		try {
			KeyPairGenerator key = KeyPairGenerator.getInstance("RSA");
			
			if(strength > 512)
				key.initialize(strength);
			else
				key.initialize(minStrength);
			
			KeyPair pair = key.genKeyPair();
			this.privateKey = pair.getPrivate();
			this.publicKey = pair.getPublic() ;
			
		} catch(NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
	}
	
	public String encrypt(String message) {
		String encMessage
		
		return encMessage
	}

}


